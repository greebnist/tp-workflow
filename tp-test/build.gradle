apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

def classesJava = "${project.buildDir}/classes/main"
def javasRoot = "${rootProject.rootDir}/src/main/java"
def testClassesJava = "$project.buildDir}/classes/test"
def testJavaRoot = "${rootProject.rootDir}/src/test/java"

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'mysql:mysql-connector-java:5.1.37'
    compile 'com.github.javafaker:javafaker:0.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
    ignoreFailures = true
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

/* Checkstyle */
apply plugin: 'checkstyle'

checkstyle {
    toolVersion = "8.18"
}

checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

tasks.withType(Checkstyle) {
    ignoreFailures = true
    showViolations = false
    configFile = file("$rootProject.projectDir/config/checkstyle/checkstyle.xml")
    reports {
        xml.enabled false
        html.enabled true
    }
}


task copyDeps(type: Copy) {
  from configurations.runtime
  into 'libs'
}

/* PMD */

apply plugin: 'pmd'

task pmdMain(type: Pmd, overwrite: true) {
 ignoreFailures = true
 description 'Runs PMD inspection against Android sourcesets.'
 group = 'Code Quality'
 ruleSetFiles = files("${rootProject.rootDir}/config/pmd/pmd_rules.xml")
 source = fileTree( javasRoot)
 include '**/*.java'
 exclude '**/gen/**'
 reports {
 xml.enabled = true
 html.enabled = false
 }
}

// add CPD to check
check  {
  File outDir = new File('build/reports/pmd/')
  outDir.mkdirs()
  ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
    classpath: configurations.pmd.asPath)
  ant.cpd(minimumTokenCount: '100', format: 'xml',
    outputFile: new File(outDir , 'cpd.xml')) {
    fileset(dir: "src/main/java") {
      include(name: '**/*.java')
    }
  }
}

task pmdTest(type: Pmd, overwrite: true) {
 ignoreFailures = true
 description 'Runs PMD inspection against Android sourcesets.'
 group = 'Code Quality'
 ruleSetFiles = files("${rootProject.rootDir}/config/pmd/pmd_rules.xml")
 source = fileTree(testJavaRoot)
 include '**/*.java'
 exclude '**/gen/**'
 reports {
 xml.enabled = true
 html.enabled = false
 }
}

/* findbugs */

apply plugin: "findbugs"

findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main, sourceSets.test]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
    showProgress = true
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    omitVisitors = ["FindNonShortCircuit"]
    excludeFilter = file("$rootProject.projectDir/config/findbugs/findbugsExclude.xml")
}

/* jacoco */

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$project.buildDir/reports/jacoco")
}
